name: Containerised Firmware Build

on:
  workflow_call:
    inputs:
      firmware:
        required: true
        type: string
      target:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: cypherock/x1-firmware-builder:v0.0.0
    steps:
    - shell: bash
      env:
        GET_KEY: ${{ secrets.GET_KEY }}
      run: $GET_KEY && cp privatekeypairs/*.h utilities/script/
    - name: Build Firmware (${{ inputs.firmware }} - ${{ inputs.target }})
      run: |
        if [[ "${{ github.ref_type }}" == "tag" ]]; then
          export VERSION_TAG=$(echo "${{ github.ref }}" | awk -F/ '{print $3}')
        elif [[ "${{ github.ref_type }}" == "branch" ]]; then
          export VERSION_TAG=$(echo "${{ github.ref }}" | awk -F/ '{print $3}')
        else
          # reftype is repository; use default branch
          export VERSION_TAG=main
        fi
        git clone --branch ${VERSION_TAG} --depth 1 https://github.com/${{ github.repository }}.git --recurse-submodules
        cd x1_wallet_firmware
        utilities/build.sh -f ${{ inputs.firmware }} -t ${{ inputs.target }}
        cp build/*/Cypherock-*.* ../
        cd ../ && mkdir build
        cp Cypherock-* build/
    - name: Archive Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.firmware }}-${{ inputs.target }}-outputs
        path: build
